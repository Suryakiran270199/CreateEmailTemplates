import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { SESv2ServiceException as __BaseException } from "./SESv2ServiceException";
export declare const ContactLanguage: {
  readonly EN: "EN";
  readonly JA: "JA";
};
export type ContactLanguage =
  (typeof ContactLanguage)[keyof typeof ContactLanguage];
export declare const MailType: {
  readonly MARKETING: "MARKETING";
  readonly TRANSACTIONAL: "TRANSACTIONAL";
};
export type MailType = (typeof MailType)[keyof typeof MailType];
export declare const ReviewStatus: {
  readonly DENIED: "DENIED";
  readonly FAILED: "FAILED";
  readonly GRANTED: "GRANTED";
  readonly PENDING: "PENDING";
};
export type ReviewStatus = (typeof ReviewStatus)[keyof typeof ReviewStatus];
export interface ReviewDetails {
  Status?: ReviewStatus;
  CaseId?: string;
}
export interface AccountDetails {
  MailType?: MailType;
  WebsiteURL?: string;
  ContactLanguage?: ContactLanguage;
  UseCaseDescription?: string;
  AdditionalContactEmailAddresses?: string[];
  ReviewDetails?: ReviewDetails;
}
export declare class AccountSuspendedException extends __BaseException {
  readonly name: "AccountSuspendedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccountSuspendedException, __BaseException>
  );
}
export declare class AlreadyExistsException extends __BaseException {
  readonly name: "AlreadyExistsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AlreadyExistsException, __BaseException>
  );
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare const MetricDimensionName: {
  readonly CONFIGURATION_SET: "CONFIGURATION_SET";
  readonly EMAIL_IDENTITY: "EMAIL_IDENTITY";
  readonly ISP: "ISP";
};
export type MetricDimensionName =
  (typeof MetricDimensionName)[keyof typeof MetricDimensionName];
export declare const Metric: {
  readonly CLICK: "CLICK";
  readonly COMPLAINT: "COMPLAINT";
  readonly DELIVERY: "DELIVERY";
  readonly DELIVERY_CLICK: "DELIVERY_CLICK";
  readonly DELIVERY_COMPLAINT: "DELIVERY_COMPLAINT";
  readonly DELIVERY_OPEN: "DELIVERY_OPEN";
  readonly OPEN: "OPEN";
  readonly PERMANENT_BOUNCE: "PERMANENT_BOUNCE";
  readonly SEND: "SEND";
  readonly TRANSIENT_BOUNCE: "TRANSIENT_BOUNCE";
};
export type Metric = (typeof Metric)[keyof typeof Metric];
export declare const MetricNamespace: {
  readonly VDM: "VDM";
};
export type MetricNamespace =
  (typeof MetricNamespace)[keyof typeof MetricNamespace];
export interface BatchGetMetricDataQuery {
  Id: string | undefined;
  Namespace: MetricNamespace | undefined;
  Metric: Metric | undefined;
  Dimensions?: Partial<Record<MetricDimensionName, string>>;
  StartDate: Date | undefined;
  EndDate: Date | undefined;
}
export interface BatchGetMetricDataRequest {
  Queries: BatchGetMetricDataQuery[] | undefined;
}
export declare const QueryErrorCode: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
};
export type QueryErrorCode =
  (typeof QueryErrorCode)[keyof typeof QueryErrorCode];
export interface MetricDataError {
  Id?: string;
  Code?: QueryErrorCode;
  Message?: string;
}
export interface MetricDataResult {
  Id?: string;
  Timestamps?: Date[];
  Values?: number[];
}
export interface BatchGetMetricDataResponse {
  Results?: MetricDataResult[];
  Errors?: MetricDataError[];
}
export declare class InternalServiceErrorException extends __BaseException {
  readonly name: "InternalServiceErrorException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServiceErrorException, __BaseException>
  );
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export declare const BehaviorOnMxFailure: {
  readonly REJECT_MESSAGE: "REJECT_MESSAGE";
  readonly USE_DEFAULT_VALUE: "USE_DEFAULT_VALUE";
};
export type BehaviorOnMxFailure =
  (typeof BehaviorOnMxFailure)[keyof typeof BehaviorOnMxFailure];
export interface BlacklistEntry {
  RblName?: string;
  ListingTime?: Date;
  Description?: string;
}
export interface Content {
  Data: string | undefined;
  Charset?: string;
}
export interface Body {
  Text?: Content;
  Html?: Content;
}
export declare const BounceType: {
  readonly PERMANENT: "PERMANENT";
  readonly TRANSIENT: "TRANSIENT";
  readonly UNDETERMINED: "UNDETERMINED";
};
export type BounceType = (typeof BounceType)[keyof typeof BounceType];
export interface Bounce {
  BounceType?: BounceType;
  BounceSubType?: string;
  DiagnosticCode?: string;
}
export interface Template {
  TemplateName?: string;
  TemplateArn?: string;
  TemplateData?: string;
}
export interface BulkEmailContent {
  Template?: Template;
}
export interface Destination {
  ToAddresses?: string[];
  CcAddresses?: string[];
  BccAddresses?: string[];
}
export interface ReplacementTemplate {
  ReplacementTemplateData?: string;
}
export interface ReplacementEmailContent {
  ReplacementTemplate?: ReplacementTemplate;
}
export interface MessageTag {
  Name: string | undefined;
  Value: string | undefined;
}
export interface BulkEmailEntry {
  Destination: Destination | undefined;
  ReplacementTags?: MessageTag[];
  ReplacementEmailContent?: ReplacementEmailContent;
}
export declare const BulkEmailStatus: {
  readonly ACCOUNT_DAILY_QUOTA_EXCEEDED: "ACCOUNT_DAILY_QUOTA_EXCEEDED";
  readonly ACCOUNT_SENDING_PAUSED: "ACCOUNT_SENDING_PAUSED";
  readonly ACCOUNT_SUSPENDED: "ACCOUNT_SUSPENDED";
  readonly ACCOUNT_THROTTLED: "ACCOUNT_THROTTLED";
  readonly CONFIGURATION_SET_NOT_FOUND: "CONFIGURATION_SET_NOT_FOUND";
  readonly CONFIGURATION_SET_SENDING_PAUSED: "CONFIGURATION_SET_SENDING_PAUSED";
  readonly FAILED: "FAILED";
  readonly INVALID_PARAMETER: "INVALID_PARAMETER";
  readonly INVALID_SENDING_POOL_NAME: "INVALID_SENDING_POOL_NAME";
  readonly MAIL_FROM_DOMAIN_NOT_VERIFIED: "MAIL_FROM_DOMAIN_NOT_VERIFIED";
  readonly MESSAGE_REJECTED: "MESSAGE_REJECTED";
  readonly SUCCESS: "SUCCESS";
  readonly TEMPLATE_NOT_FOUND: "TEMPLATE_NOT_FOUND";
  readonly TRANSIENT_FAILURE: "TRANSIENT_FAILURE";
};
export type BulkEmailStatus =
  (typeof BulkEmailStatus)[keyof typeof BulkEmailStatus];
export interface BulkEmailEntryResult {
  Status?: BulkEmailStatus;
  Error?: string;
  MessageId?: string;
}
export interface CancelExportJobRequest {
  JobId: string | undefined;
}
export interface CancelExportJobResponse {}
export declare const DimensionValueSource: {
  readonly EMAIL_HEADER: "EMAIL_HEADER";
  readonly LINK_TAG: "LINK_TAG";
  readonly MESSAGE_TAG: "MESSAGE_TAG";
};
export type DimensionValueSource =
  (typeof DimensionValueSource)[keyof typeof DimensionValueSource];
export interface CloudWatchDimensionConfiguration {
  DimensionName: string | undefined;
  DimensionValueSource: DimensionValueSource | undefined;
  DefaultDimensionValue: string | undefined;
}
export interface CloudWatchDestination {
  DimensionConfigurations: CloudWatchDimensionConfiguration[] | undefined;
}
export interface Complaint {
  ComplaintSubType?: string;
  ComplaintFeedbackType?: string;
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare const SubscriptionStatus: {
  readonly OPT_IN: "OPT_IN";
  readonly OPT_OUT: "OPT_OUT";
};
export type SubscriptionStatus =
  (typeof SubscriptionStatus)[keyof typeof SubscriptionStatus];
export interface TopicPreference {
  TopicName: string | undefined;
  SubscriptionStatus: SubscriptionStatus | undefined;
}
export interface Contact {
  EmailAddress?: string;
  TopicPreferences?: TopicPreference[];
  TopicDefaultPreferences?: TopicPreference[];
  UnsubscribeAll?: boolean;
  LastUpdatedTimestamp?: Date;
}
export interface ContactList {
  ContactListName?: string;
  LastUpdatedTimestamp?: Date;
}
export declare const ContactListImportAction: {
  readonly DELETE: "DELETE";
  readonly PUT: "PUT";
};
export type ContactListImportAction =
  (typeof ContactListImportAction)[keyof typeof ContactListImportAction];
export interface ContactListDestination {
  ContactListName: string | undefined;
  ContactListImportAction: ContactListImportAction | undefined;
}
export declare const TlsPolicy: {
  readonly OPTIONAL: "OPTIONAL";
  readonly REQUIRE: "REQUIRE";
};
export type TlsPolicy = (typeof TlsPolicy)[keyof typeof TlsPolicy];
export interface DeliveryOptions {
  TlsPolicy?: TlsPolicy;
  SendingPoolName?: string;
}
export interface ReputationOptions {
  ReputationMetricsEnabled?: boolean;
  LastFreshStart?: Date;
}
export interface SendingOptions {
  SendingEnabled?: boolean;
}
export declare const SuppressionListReason: {
  readonly BOUNCE: "BOUNCE";
  readonly COMPLAINT: "COMPLAINT";
};
export type SuppressionListReason =
  (typeof SuppressionListReason)[keyof typeof SuppressionListReason];
export interface SuppressionOptions {
  SuppressedReasons?: SuppressionListReason[];
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface TrackingOptions {
  CustomRedirectDomain: string | undefined;
}
export declare const FeatureStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type FeatureStatus = (typeof FeatureStatus)[keyof typeof FeatureStatus];
export interface DashboardOptions {
  EngagementMetrics?: FeatureStatus;
}
export interface GuardianOptions {
  OptimizedSharedDelivery?: FeatureStatus;
}
export interface VdmOptions {
  DashboardOptions?: DashboardOptions;
  GuardianOptions?: GuardianOptions;
}
export interface CreateConfigurationSetRequest {
  ConfigurationSetName: string | undefined;
  TrackingOptions?: TrackingOptions;
  DeliveryOptions?: DeliveryOptions;
  ReputationOptions?: ReputationOptions;
  SendingOptions?: SendingOptions;
  Tags?: Tag[];
  SuppressionOptions?: SuppressionOptions;
  VdmOptions?: VdmOptions;
}
export interface CreateConfigurationSetResponse {}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface KinesisFirehoseDestination {
  IamRoleArn: string | undefined;
  DeliveryStreamArn: string | undefined;
}
export declare const EventType: {
  readonly BOUNCE: "BOUNCE";
  readonly CLICK: "CLICK";
  readonly COMPLAINT: "COMPLAINT";
  readonly DELIVERY: "DELIVERY";
  readonly DELIVERY_DELAY: "DELIVERY_DELAY";
  readonly OPEN: "OPEN";
  readonly REJECT: "REJECT";
  readonly RENDERING_FAILURE: "RENDERING_FAILURE";
  readonly SEND: "SEND";
  readonly SUBSCRIPTION: "SUBSCRIPTION";
};
export type EventType = (typeof EventType)[keyof typeof EventType];
export interface PinpointDestination {
  ApplicationArn?: string;
}
export interface SnsDestination {
  TopicArn: string | undefined;
}
export interface EventDestinationDefinition {
  Enabled?: boolean;
  MatchingEventTypes?: EventType[];
  KinesisFirehoseDestination?: KinesisFirehoseDestination;
  CloudWatchDestination?: CloudWatchDestination;
  SnsDestination?: SnsDestination;
  PinpointDestination?: PinpointDestination;
}
export interface CreateConfigurationSetEventDestinationRequest {
  ConfigurationSetName: string | undefined;
  EventDestinationName: string | undefined;
  EventDestination: EventDestinationDefinition | undefined;
}
export interface CreateConfigurationSetEventDestinationResponse {}
export interface CreateContactRequest {
  ContactListName: string | undefined;
  EmailAddress: string | undefined;
  TopicPreferences?: TopicPreference[];
  UnsubscribeAll?: boolean;
  AttributesData?: string;
}
export interface CreateContactResponse {}
export interface Topic {
  TopicName: string | undefined;
  DisplayName: string | undefined;
  Description?: string;
  DefaultSubscriptionStatus: SubscriptionStatus | undefined;
}
export interface CreateContactListRequest {
  ContactListName: string | undefined;
  Topics?: Topic[];
  Description?: string;
  Tags?: Tag[];
}
export interface CreateContactListResponse {}
export interface CreateCustomVerificationEmailTemplateRequest {
  TemplateName: string | undefined;
  FromEmailAddress: string | undefined;
  TemplateSubject: string | undefined;
  TemplateContent: string | undefined;
  SuccessRedirectionURL: string | undefined;
  FailureRedirectionURL: string | undefined;
}
export interface CreateCustomVerificationEmailTemplateResponse {}
export declare const ScalingMode: {
  readonly MANAGED: "MANAGED";
  readonly STANDARD: "STANDARD";
};
export type ScalingMode = (typeof ScalingMode)[keyof typeof ScalingMode];
export interface CreateDedicatedIpPoolRequest {
  PoolName: string | undefined;
  Tags?: Tag[];
  ScalingMode?: ScalingMode;
}
export interface CreateDedicatedIpPoolResponse {}
export interface RawMessage {
  Data: Uint8Array | undefined;
}
export interface Message {
  Subject: Content | undefined;
  Body: Body | undefined;
}
export interface EmailContent {
  Simple?: Message;
  Raw?: RawMessage;
  Template?: Template;
}
export interface CreateDeliverabilityTestReportRequest {
  ReportName?: string;
  FromEmailAddress: string | undefined;
  Content: EmailContent | undefined;
  Tags?: Tag[];
}
export declare const DeliverabilityTestStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type DeliverabilityTestStatus =
  (typeof DeliverabilityTestStatus)[keyof typeof DeliverabilityTestStatus];
export interface CreateDeliverabilityTestReportResponse {
  ReportId: string | undefined;
  DeliverabilityTestStatus: DeliverabilityTestStatus | undefined;
}
export declare class MailFromDomainNotVerifiedException extends __BaseException {
  readonly name: "MailFromDomainNotVerifiedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MailFromDomainNotVerifiedException,
      __BaseException
    >
  );
}
export declare class MessageRejected extends __BaseException {
  readonly name: "MessageRejected";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<MessageRejected, __BaseException>);
}
export declare class SendingPausedException extends __BaseException {
  readonly name: "SendingPausedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SendingPausedException, __BaseException>
  );
}
export declare const DkimSigningKeyLength: {
  readonly RSA_1024_BIT: "RSA_1024_BIT";
  readonly RSA_2048_BIT: "RSA_2048_BIT";
};
export type DkimSigningKeyLength =
  (typeof DkimSigningKeyLength)[keyof typeof DkimSigningKeyLength];
export interface DkimSigningAttributes {
  DomainSigningSelector?: string;
  DomainSigningPrivateKey?: string;
  NextSigningKeyLength?: DkimSigningKeyLength;
}
export interface CreateEmailIdentityRequest {
  EmailIdentity: string | undefined;
  Tags?: Tag[];
  DkimSigningAttributes?: DkimSigningAttributes;
  ConfigurationSetName?: string;
}
export declare const DkimSigningAttributesOrigin: {
  readonly AWS_SES: "AWS_SES";
  readonly EXTERNAL: "EXTERNAL";
};
export type DkimSigningAttributesOrigin =
  (typeof DkimSigningAttributesOrigin)[keyof typeof DkimSigningAttributesOrigin];
export declare const DkimStatus: {
  readonly FAILED: "FAILED";
  readonly NOT_STARTED: "NOT_STARTED";
  readonly PENDING: "PENDING";
  readonly SUCCESS: "SUCCESS";
  readonly TEMPORARY_FAILURE: "TEMPORARY_FAILURE";
};
export type DkimStatus = (typeof DkimStatus)[keyof typeof DkimStatus];
export interface DkimAttributes {
  SigningEnabled?: boolean;
  Status?: DkimStatus;
  Tokens?: string[];
  SigningAttributesOrigin?: DkimSigningAttributesOrigin;
  NextSigningKeyLength?: DkimSigningKeyLength;
  CurrentSigningKeyLength?: DkimSigningKeyLength;
  LastKeyGenerationTimestamp?: Date;
}
export declare const IdentityType: {
  readonly DOMAIN: "DOMAIN";
  readonly EMAIL_ADDRESS: "EMAIL_ADDRESS";
  readonly MANAGED_DOMAIN: "MANAGED_DOMAIN";
};
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export interface CreateEmailIdentityResponse {
  IdentityType?: IdentityType;
  VerifiedForSendingStatus?: boolean;
  DkimAttributes?: DkimAttributes;
}
export interface CreateEmailIdentityPolicyRequest {
  EmailIdentity: string | undefined;
  PolicyName: string | undefined;
  Policy: string | undefined;
}
export interface CreateEmailIdentityPolicyResponse {}
export interface EmailTemplateContent {
  Subject?: string;
  Text?: string;
  Html?: string;
}
export interface CreateEmailTemplateRequest {
  TemplateName: string | undefined;
  TemplateContent: EmailTemplateContent | undefined;
}
export interface CreateEmailTemplateResponse {}
export declare const DeliveryEventType: {
  readonly COMPLAINT: "COMPLAINT";
  readonly DELIVERY: "DELIVERY";
  readonly PERMANENT_BOUNCE: "PERMANENT_BOUNCE";
  readonly SEND: "SEND";
  readonly TRANSIENT_BOUNCE: "TRANSIENT_BOUNCE";
  readonly UNDETERMINED_BOUNCE: "UNDETERMINED_BOUNCE";
};
export type DeliveryEventType =
  (typeof DeliveryEventType)[keyof typeof DeliveryEventType];
export declare const EngagementEventType: {
  readonly CLICK: "CLICK";
  readonly OPEN: "OPEN";
};
export type EngagementEventType =
  (typeof EngagementEventType)[keyof typeof EngagementEventType];
export interface MessageInsightsFilters {
  FromEmailAddress?: string[];
  Destination?: string[];
  Subject?: string[];
  Isp?: string[];
  LastDeliveryEvent?: DeliveryEventType[];
  LastEngagementEvent?: EngagementEventType[];
}
export interface MessageInsightsDataSource {
  StartDate: Date | undefined;
  EndDate: Date | undefined;
  Include?: MessageInsightsFilters;
  Exclude?: MessageInsightsFilters;
  MaxResults?: number;
}
export declare const MetricAggregation: {
  readonly RATE: "RATE";
  readonly VOLUME: "VOLUME";
};
export type MetricAggregation =
  (typeof MetricAggregation)[keyof typeof MetricAggregation];
export interface ExportMetric {
  Name?: Metric;
  Aggregation?: MetricAggregation;
}
export interface MetricsDataSource {
  Dimensions: Partial<Record<MetricDimensionName, string[]>> | undefined;
  Namespace: MetricNamespace | undefined;
  Metrics: ExportMetric[] | undefined;
  StartDate: Date | undefined;
  EndDate: Date | undefined;
}
export interface ExportDataSource {
  MetricsDataSource?: MetricsDataSource;
  MessageInsightsDataSource?: MessageInsightsDataSource;
}
export declare const DataFormat: {
  readonly CSV: "CSV";
  readonly JSON: "JSON";
};
export type DataFormat = (typeof DataFormat)[keyof typeof DataFormat];
export interface ExportDestination {
  DataFormat: DataFormat | undefined;
  S3Url?: string;
}
export interface CreateExportJobRequest {
  ExportDataSource: ExportDataSource | undefined;
  ExportDestination: ExportDestination | undefined;
}
export interface CreateExportJobResponse {
  JobId?: string;
}
export interface ImportDataSource {
  S3Url: string | undefined;
  DataFormat: DataFormat | undefined;
}
export declare const SuppressionListImportAction: {
  readonly DELETE: "DELETE";
  readonly PUT: "PUT";
};
export type SuppressionListImportAction =
  (typeof SuppressionListImportAction)[keyof typeof SuppressionListImportAction];
export interface SuppressionListDestination {
  SuppressionListImportAction: SuppressionListImportAction | undefined;
}
export interface ImportDestination {
  SuppressionListDestination?: SuppressionListDestination;
  ContactListDestination?: ContactListDestination;
}
export interface CreateImportJobRequest {
  ImportDestination: ImportDestination | undefined;
  ImportDataSource: ImportDataSource | undefined;
}
export interface CreateImportJobResponse {
  JobId?: string;
}
export interface CustomVerificationEmailTemplateMetadata {
  TemplateName?: string;
  FromEmailAddress?: string;
  TemplateSubject?: string;
  SuccessRedirectionURL?: string;
  FailureRedirectionURL?: string;
}
export interface DomainIspPlacement {
  IspName?: string;
  InboxRawCount?: number;
  SpamRawCount?: number;
  InboxPercentage?: number;
  SpamPercentage?: number;
}
export interface VolumeStatistics {
  InboxRawCount?: number;
  SpamRawCount?: number;
  ProjectedInbox?: number;
  ProjectedSpam?: number;
}
export interface DailyVolume {
  StartDate?: Date;
  VolumeStatistics?: VolumeStatistics;
  DomainIspPlacements?: DomainIspPlacement[];
}
export interface DashboardAttributes {
  EngagementMetrics?: FeatureStatus;
}
export declare const WarmupStatus: {
  readonly DONE: "DONE";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type WarmupStatus = (typeof WarmupStatus)[keyof typeof WarmupStatus];
export interface DedicatedIp {
  Ip: string | undefined;
  WarmupStatus: WarmupStatus | undefined;
  WarmupPercentage: number | undefined;
  PoolName?: string;
}
export interface DedicatedIpPool {
  PoolName: string | undefined;
  ScalingMode: ScalingMode | undefined;
}
export interface DeleteConfigurationSetRequest {
  ConfigurationSetName: string | undefined;
}
export interface DeleteConfigurationSetResponse {}
export interface DeleteConfigurationSetEventDestinationRequest {
  ConfigurationSetName: string | undefined;
  EventDestinationName: string | undefined;
}
export interface DeleteConfigurationSetEventDestinationResponse {}
export interface DeleteContactRequest {
  ContactListName: string | undefined;
  EmailAddress: string | undefined;
}
export interface DeleteContactResponse {}
export interface DeleteContactListRequest {
  ContactListName: string | undefined;
}
export interface DeleteContactListResponse {}
export interface DeleteCustomVerificationEmailTemplateRequest {
  TemplateName: string | undefined;
}
export interface DeleteCustomVerificationEmailTemplateResponse {}
export interface DeleteDedicatedIpPoolRequest {
  PoolName: string | undefined;
}
export interface DeleteDedicatedIpPoolResponse {}
export interface DeleteEmailIdentityRequest {
  EmailIdentity: string | undefined;
}
export interface DeleteEmailIdentityResponse {}
export interface DeleteEmailIdentityPolicyRequest {
  EmailIdentity: string | undefined;
  PolicyName: string | undefined;
}
export interface DeleteEmailIdentityPolicyResponse {}
export interface DeleteEmailTemplateRequest {
  TemplateName: string | undefined;
}
export interface DeleteEmailTemplateResponse {}
export interface DeleteSuppressedDestinationRequest {
  EmailAddress: string | undefined;
}
export interface DeleteSuppressedDestinationResponse {}
export declare const DeliverabilityDashboardAccountStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly DISABLED: "DISABLED";
  readonly PENDING_EXPIRATION: "PENDING_EXPIRATION";
};
export type DeliverabilityDashboardAccountStatus =
  (typeof DeliverabilityDashboardAccountStatus)[keyof typeof DeliverabilityDashboardAccountStatus];
export interface DeliverabilityTestReport {
  ReportId?: string;
  ReportName?: string;
  Subject?: string;
  FromEmailAddress?: string;
  CreateDate?: Date;
  DeliverabilityTestStatus?: DeliverabilityTestStatus;
}
export interface DomainDeliverabilityCampaign {
  CampaignId?: string;
  ImageUrl?: string;
  Subject?: string;
  FromAddress?: string;
  SendingIps?: string[];
  FirstSeenDateTime?: Date;
  LastSeenDateTime?: Date;
  InboxCount?: number;
  SpamCount?: number;
  ReadRate?: number;
  DeleteRate?: number;
  ReadDeleteRate?: number;
  ProjectedVolume?: number;
  Esps?: string[];
}
export interface InboxPlacementTrackingOption {
  Global?: boolean;
  TrackedIsps?: string[];
}
export interface DomainDeliverabilityTrackingOption {
  Domain?: string;
  SubscriptionStartDate?: Date;
  InboxPlacementTrackingOption?: InboxPlacementTrackingOption;
}
export interface EventDetails {
  Bounce?: Bounce;
  Complaint?: Complaint;
}
export interface InsightsEvent {
  Timestamp?: Date;
  Type?: EventType;
  Details?: EventDetails;
}
export interface EmailInsights {
  Destination?: string;
  Isp?: string;
  Events?: InsightsEvent[];
}
export interface EmailTemplateMetadata {
  TemplateName?: string;
  CreatedTimestamp?: Date;
}
export interface EventDestination {
  Name: string | undefined;
  Enabled?: boolean;
  MatchingEventTypes: EventType[] | undefined;
  KinesisFirehoseDestination?: KinesisFirehoseDestination;
  CloudWatchDestination?: CloudWatchDestination;
  SnsDestination?: SnsDestination;
  PinpointDestination?: PinpointDestination;
}
export declare const ExportSourceType: {
  readonly MESSAGE_INSIGHTS: "MESSAGE_INSIGHTS";
  readonly METRICS_DATA: "METRICS_DATA";
};
export type ExportSourceType =
  (typeof ExportSourceType)[keyof typeof ExportSourceType];
export declare const JobStatus: {
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETED: "COMPLETED";
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly PROCESSING: "PROCESSING";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export interface ExportJobSummary {
  JobId?: string;
  ExportSourceType?: ExportSourceType;
  JobStatus?: JobStatus;
  CreatedTimestamp?: Date;
  CompletedTimestamp?: Date;
}
export interface ExportStatistics {
  ProcessedRecordsCount?: number;
  ExportedRecordsCount?: number;
}
export interface FailureInfo {
  FailedRecordsS3Url?: string;
  ErrorMessage?: string;
}
export interface GetAccountRequest {}
export interface SendQuota {
  Max24HourSend?: number;
  MaxSendRate?: number;
  SentLast24Hours?: number;
}
export interface SuppressionAttributes {
  SuppressedReasons?: SuppressionListReason[];
}
export interface GuardianAttributes {
  OptimizedSharedDelivery?: FeatureStatus;
}
export interface VdmAttributes {
  VdmEnabled: FeatureStatus | undefined;
  DashboardAttributes?: DashboardAttributes;
  GuardianAttributes?: GuardianAttributes;
}
export interface GetAccountResponse {
  DedicatedIpAutoWarmupEnabled?: boolean;
  EnforcementStatus?: string;
  ProductionAccessEnabled?: boolean;
  SendQuota?: SendQuota;
  SendingEnabled?: boolean;
  SuppressionAttributes?: SuppressionAttributes;
  Details?: AccountDetails;
  VdmAttributes?: VdmAttributes;
}
export interface GetBlacklistReportsRequest {
  BlacklistItemNames: string[] | undefined;
}
export interface GetBlacklistReportsResponse {
  BlacklistReport: Record<string, BlacklistEntry[]> | undefined;
}
export interface GetConfigurationSetRequest {
  ConfigurationSetName: string | undefined;
}
export interface GetConfigurationSetResponse {
  ConfigurationSetName?: string;
  TrackingOptions?: TrackingOptions;
  DeliveryOptions?: DeliveryOptions;
  ReputationOptions?: ReputationOptions;
  SendingOptions?: SendingOptions;
  Tags?: Tag[];
  SuppressionOptions?: SuppressionOptions;
  VdmOptions?: VdmOptions;
}
export interface GetConfigurationSetEventDestinationsRequest {
  ConfigurationSetName: string | undefined;
}
export interface GetConfigurationSetEventDestinationsResponse {
  EventDestinations?: EventDestination[];
}
export interface GetContactRequest {
  ContactListName: string | undefined;
  EmailAddress: string | undefined;
}
export interface GetContactResponse {
  ContactListName?: string;
  EmailAddress?: string;
  TopicPreferences?: TopicPreference[];
  TopicDefaultPreferences?: TopicPreference[];
  UnsubscribeAll?: boolean;
  AttributesData?: string;
  CreatedTimestamp?: Date;
  LastUpdatedTimestamp?: Date;
}
export interface GetContactListRequest {
  ContactListName: string | undefined;
}
export interface GetContactListResponse {
  ContactListName?: string;
  Topics?: Topic[];
  Description?: string;
  CreatedTimestamp?: Date;
  LastUpdatedTimestamp?: Date;
  Tags?: Tag[];
}
export interface GetCustomVerificationEmailTemplateRequest {
  TemplateName: string | undefined;
}
export interface GetCustomVerificationEmailTemplateResponse {
  TemplateName?: string;
  FromEmailAddress?: string;
  TemplateSubject?: string;
  TemplateContent?: string;
  SuccessRedirectionURL?: string;
  FailureRedirectionURL?: string;
}
export interface GetDedicatedIpRequest {
  Ip: string | undefined;
}
export interface GetDedicatedIpResponse {
  DedicatedIp?: DedicatedIp;
}
export interface GetDedicatedIpPoolRequest {
  PoolName: string | undefined;
}
export interface GetDedicatedIpPoolResponse {
  DedicatedIpPool?: DedicatedIpPool;
}
export interface GetDedicatedIpsRequest {
  PoolName?: string;
  NextToken?: string;
  PageSize?: number;
}
export interface GetDedicatedIpsResponse {
  DedicatedIps?: DedicatedIp[];
  NextToken?: string;
}
export interface GetDeliverabilityDashboardOptionsRequest {}
export interface GetDeliverabilityDashboardOptionsResponse {
  DashboardEnabled: boolean | undefined;
  SubscriptionExpiryDate?: Date;
  AccountStatus?: DeliverabilityDashboardAccountStatus;
  ActiveSubscribedDomains?: DomainDeliverabilityTrackingOption[];
  PendingExpirationSubscribedDomains?: DomainDeliverabilityTrackingOption[];
}
export interface GetDeliverabilityTestReportRequest {
  ReportId: string | undefined;
}
export interface PlacementStatistics {
  InboxPercentage?: number;
  SpamPercentage?: number;
  MissingPercentage?: number;
  SpfPercentage?: number;
  DkimPercentage?: number;
}
export interface IspPlacement {
  IspName?: string;
  PlacementStatistics?: PlacementStatistics;
}
export interface GetDeliverabilityTestReportResponse {
  DeliverabilityTestReport: DeliverabilityTestReport | undefined;
  OverallPlacement: PlacementStatistics | undefined;
  IspPlacements: IspPlacement[] | undefined;
  Message?: string;
  Tags?: Tag[];
}
export interface GetDomainDeliverabilityCampaignRequest {
  CampaignId: string | undefined;
}
export interface GetDomainDeliverabilityCampaignResponse {
  DomainDeliverabilityCampaign: DomainDeliverabilityCampaign | undefined;
}
export interface GetDomainStatisticsReportRequest {
  Domain: string | undefined;
  StartDate: Date | undefined;
  EndDate: Date | undefined;
}
export interface OverallVolume {
  VolumeStatistics?: VolumeStatistics;
  ReadRatePercent?: number;
  DomainIspPlacements?: DomainIspPlacement[];
}
export interface GetDomainStatisticsReportResponse {
  OverallVolume: OverallVolume | undefined;
  DailyVolumes: DailyVolume[] | undefined;
}
export interface GetEmailIdentityRequest {
  EmailIdentity: string | undefined;
}
export declare const MailFromDomainStatus: {
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly SUCCESS: "SUCCESS";
  readonly TEMPORARY_FAILURE: "TEMPORARY_FAILURE";
};
export type MailFromDomainStatus =
  (typeof MailFromDomainStatus)[keyof typeof MailFromDomainStatus];
export interface MailFromAttributes {
  MailFromDomain: string | undefined;
  MailFromDomainStatus: MailFromDomainStatus | undefined;
  BehaviorOnMxFailure: BehaviorOnMxFailure | undefined;
}
export declare const VerificationError: {
  readonly DNS_SERVER_ERROR: "DNS_SERVER_ERROR";
  readonly HOST_NOT_FOUND: "HOST_NOT_FOUND";
  readonly INVALID_VALUE: "INVALID_VALUE";
  readonly SERVICE_ERROR: "SERVICE_ERROR";
  readonly TYPE_NOT_FOUND: "TYPE_NOT_FOUND";
};
export type VerificationError =
  (typeof VerificationError)[keyof typeof VerificationError];
export interface SOARecord {
  PrimaryNameServer?: string;
  AdminEmail?: string;
  SerialNumber?: number;
}
export interface VerificationInfo {
  LastCheckedTimestamp?: Date;
  LastSuccessTimestamp?: Date;
  ErrorType?: VerificationError;
  SOARecord?: SOARecord;
}
export declare const VerificationStatus: {
  readonly FAILED: "FAILED";
  readonly NOT_STARTED: "NOT_STARTED";
  readonly PENDING: "PENDING";
  readonly SUCCESS: "SUCCESS";
  readonly TEMPORARY_FAILURE: "TEMPORARY_FAILURE";
};
export type VerificationStatus =
  (typeof VerificationStatus)[keyof typeof VerificationStatus];
export interface GetEmailIdentityResponse {
  IdentityType?: IdentityType;
  FeedbackForwardingStatus?: boolean;
  VerifiedForSendingStatus?: boolean;
  DkimAttributes?: DkimAttributes;
  MailFromAttributes?: MailFromAttributes;
  Policies?: Record<string, string>;
  Tags?: Tag[];
  ConfigurationSetName?: string;
  VerificationStatus?: VerificationStatus;
  VerificationInfo?: VerificationInfo;
}
export interface GetEmailIdentityPoliciesRequest {
  EmailIdentity: string | undefined;
}
export interface GetEmailIdentityPoliciesResponse {
  Policies?: Record<string, string>;
}
export interface GetEmailTemplateRequest {
  TemplateName: string | undefined;
}
export interface GetEmailTemplateResponse {
  TemplateName: string | undefined;
  TemplateContent: EmailTemplateContent | undefined;
}
export interface GetExportJobRequest {
  JobId: string | undefined;
}
export interface GetExportJobResponse {
  JobId?: string;
  ExportSourceType?: ExportSourceType;
  JobStatus?: JobStatus;
  ExportDestination?: ExportDestination;
  ExportDataSource?: ExportDataSource;
  CreatedTimestamp?: Date;
  CompletedTimestamp?: Date;
  FailureInfo?: FailureInfo;
  Statistics?: ExportStatistics;
}
export interface GetImportJobRequest {
  JobId: string | undefined;
}
export interface GetImportJobResponse {
  JobId?: string;
  ImportDestination?: ImportDestination;
  ImportDataSource?: ImportDataSource;
  FailureInfo?: FailureInfo;
  JobStatus?: JobStatus;
  CreatedTimestamp?: Date;
  CompletedTimestamp?: Date;
  ProcessedRecordsCount?: number;
  FailedRecordsCount?: number;
}
export interface GetMessageInsightsRequest {
  MessageId: string | undefined;
}
export interface GetMessageInsightsResponse {
  MessageId?: string;
  FromEmailAddress?: string;
  Subject?: string;
  EmailTags?: MessageTag[];
  Insights?: EmailInsights[];
}
export interface GetSuppressedDestinationRequest {
  EmailAddress: string | undefined;
}
export interface SuppressedDestinationAttributes {
  MessageId?: string;
  FeedbackId?: string;
}
export interface SuppressedDestination {
  EmailAddress: string | undefined;
  Reason: SuppressionListReason | undefined;
  LastUpdateTime: Date | undefined;
  Attributes?: SuppressedDestinationAttributes;
}
export interface GetSuppressedDestinationResponse {
  SuppressedDestination: SuppressedDestination | undefined;
}
export interface IdentityInfo {
  IdentityType?: IdentityType;
  IdentityName?: string;
  SendingEnabled?: boolean;
  VerificationStatus?: VerificationStatus;
}
export declare const ImportDestinationType: {
  readonly CONTACT_LIST: "CONTACT_LIST";
  readonly SUPPRESSION_LIST: "SUPPRESSION_LIST";
};
export type ImportDestinationType =
  (typeof ImportDestinationType)[keyof typeof ImportDestinationType];
export interface ImportJobSummary {
  JobId?: string;
  ImportDestination?: ImportDestination;
  JobStatus?: JobStatus;
  CreatedTimestamp?: Date;
  ProcessedRecordsCount?: number;
  FailedRecordsCount?: number;
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface ListConfigurationSetsRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListConfigurationSetsResponse {
  ConfigurationSets?: string[];
  NextToken?: string;
}
export interface ListContactListsRequest {
  PageSize?: number;
  NextToken?: string;
}
export interface ListContactListsResponse {
  ContactLists?: ContactList[];
  NextToken?: string;
}
export interface TopicFilter {
  TopicName?: string;
  UseDefaultIfPreferenceUnavailable?: boolean;
}
export interface ListContactsFilter {
  FilteredStatus?: SubscriptionStatus;
  TopicFilter?: TopicFilter;
}
export interface ListContactsRequest {
  ContactListName: string | undefined;
  Filter?: ListContactsFilter;
  PageSize?: number;
  NextToken?: string;
}
export interface ListContactsResponse {
  Contacts?: Contact[];
  NextToken?: string;
}
export interface ListCustomVerificationEmailTemplatesRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListCustomVerificationEmailTemplatesResponse {
  CustomVerificationEmailTemplates?: CustomVerificationEmailTemplateMetadata[];
  NextToken?: string;
}
export interface ListDedicatedIpPoolsRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListDedicatedIpPoolsResponse {
  DedicatedIpPools?: string[];
  NextToken?: string;
}
export interface ListDeliverabilityTestReportsRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListDeliverabilityTestReportsResponse {
  DeliverabilityTestReports: DeliverabilityTestReport[] | undefined;
  NextToken?: string;
}
export interface ListDomainDeliverabilityCampaignsRequest {
  StartDate: Date | undefined;
  EndDate: Date | undefined;
  SubscribedDomain: string | undefined;
  NextToken?: string;
  PageSize?: number;
}
export interface ListDomainDeliverabilityCampaignsResponse {
  DomainDeliverabilityCampaigns: DomainDeliverabilityCampaign[] | undefined;
  NextToken?: string;
}
export interface ListEmailIdentitiesRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListEmailIdentitiesResponse {
  EmailIdentities?: IdentityInfo[];
  NextToken?: string;
}
export interface ListEmailTemplatesRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListEmailTemplatesResponse {
  TemplatesMetadata?: EmailTemplateMetadata[];
  NextToken?: string;
}
export interface ListExportJobsRequest {
  NextToken?: string;
  PageSize?: number;
  ExportSourceType?: ExportSourceType;
  JobStatus?: JobStatus;
}
export interface ListExportJobsResponse {
  ExportJobs?: ExportJobSummary[];
  NextToken?: string;
}
export interface ListImportJobsRequest {
  ImportDestinationType?: ImportDestinationType;
  NextToken?: string;
  PageSize?: number;
}
export interface ListImportJobsResponse {
  ImportJobs?: ImportJobSummary[];
  NextToken?: string;
}
export interface ListManagementOptions {
  ContactListName: string | undefined;
  TopicName?: string;
}
export declare const ListRecommendationsFilterKey: {
  readonly IMPACT: "IMPACT";
  readonly RESOURCE_ARN: "RESOURCE_ARN";
  readonly STATUS: "STATUS";
  readonly TYPE: "TYPE";
};
export type ListRecommendationsFilterKey =
  (typeof ListRecommendationsFilterKey)[keyof typeof ListRecommendationsFilterKey];
export interface ListRecommendationsRequest {
  Filter?: Partial<Record<ListRecommendationsFilterKey, string>>;
  NextToken?: string;
  PageSize?: number;
}
export declare const RecommendationImpact: {
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
};
export type RecommendationImpact =
  (typeof RecommendationImpact)[keyof typeof RecommendationImpact];
export declare const RecommendationStatus: {
  readonly FIXED: "FIXED";
  readonly OPEN: "OPEN";
};
export type RecommendationStatus =
  (typeof RecommendationStatus)[keyof typeof RecommendationStatus];
export declare const RecommendationType: {
  readonly BIMI: "BIMI";
  readonly DKIM: "DKIM";
  readonly DMARC: "DMARC";
  readonly SPF: "SPF";
};
export type RecommendationType =
  (typeof RecommendationType)[keyof typeof RecommendationType];
export interface Recommendation {
  ResourceArn?: string;
  Type?: RecommendationType;
  Description?: string;
  Status?: RecommendationStatus;
  CreatedTimestamp?: Date;
  LastUpdatedTimestamp?: Date;
  Impact?: RecommendationImpact;
}
export interface ListRecommendationsResponse {
  Recommendations?: Recommendation[];
  NextToken?: string;
}
export interface ListSuppressedDestinationsRequest {
  Reasons?: SuppressionListReason[];
  StartDate?: Date;
  EndDate?: Date;
  NextToken?: string;
  PageSize?: number;
}
export interface SuppressedDestinationSummary {
  EmailAddress: string | undefined;
  Reason: SuppressionListReason | undefined;
  LastUpdateTime: Date | undefined;
}
export interface ListSuppressedDestinationsResponse {
  SuppressedDestinationSummaries?: SuppressedDestinationSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags: Tag[] | undefined;
}
export interface PutAccountDedicatedIpWarmupAttributesRequest {
  AutoWarmupEnabled?: boolean;
}
export interface PutAccountDedicatedIpWarmupAttributesResponse {}
export interface PutAccountDetailsRequest {
  MailType: MailType | undefined;
  WebsiteURL: string | undefined;
  ContactLanguage?: ContactLanguage;
  UseCaseDescription: string | undefined;
  AdditionalContactEmailAddresses?: string[];
  ProductionAccessEnabled?: boolean;
}
export interface PutAccountDetailsResponse {}
export interface PutAccountSendingAttributesRequest {
  SendingEnabled?: boolean;
}
export interface PutAccountSendingAttributesResponse {}
export interface PutAccountSuppressionAttributesRequest {
  SuppressedReasons?: SuppressionListReason[];
}
export interface PutAccountSuppressionAttributesResponse {}
export interface PutAccountVdmAttributesRequest {
  VdmAttributes: VdmAttributes | undefined;
}
export interface PutAccountVdmAttributesResponse {}
export interface PutConfigurationSetDeliveryOptionsRequest {
  ConfigurationSetName: string | undefined;
  TlsPolicy?: TlsPolicy;
  SendingPoolName?: string;
}
export interface PutConfigurationSetDeliveryOptionsResponse {}
export interface PutConfigurationSetReputationOptionsRequest {
  ConfigurationSetName: string | undefined;
  ReputationMetricsEnabled?: boolean;
}
export interface PutConfigurationSetReputationOptionsResponse {}
export interface PutConfigurationSetSendingOptionsRequest {
  ConfigurationSetName: string | undefined;
  SendingEnabled?: boolean;
}
export interface PutConfigurationSetSendingOptionsResponse {}
export interface PutConfigurationSetSuppressionOptionsRequest {
  ConfigurationSetName: string | undefined;
  SuppressedReasons?: SuppressionListReason[];
}
export interface PutConfigurationSetSuppressionOptionsResponse {}
export interface PutConfigurationSetTrackingOptionsRequest {
  ConfigurationSetName: string | undefined;
  CustomRedirectDomain?: string;
}
export interface PutConfigurationSetTrackingOptionsResponse {}
export interface PutConfigurationSetVdmOptionsRequest {
  ConfigurationSetName: string | undefined;
  VdmOptions?: VdmOptions;
}
export interface PutConfigurationSetVdmOptionsResponse {}
export interface PutDedicatedIpInPoolRequest {
  Ip: string | undefined;
  DestinationPoolName: string | undefined;
}
export interface PutDedicatedIpInPoolResponse {}
export interface PutDedicatedIpPoolScalingAttributesRequest {
  PoolName: string | undefined;
  ScalingMode: ScalingMode | undefined;
}
export interface PutDedicatedIpPoolScalingAttributesResponse {}
export interface PutDedicatedIpWarmupAttributesRequest {
  Ip: string | undefined;
  WarmupPercentage: number | undefined;
}
export interface PutDedicatedIpWarmupAttributesResponse {}
export interface PutDeliverabilityDashboardOptionRequest {
  DashboardEnabled: boolean | undefined;
  SubscribedDomains?: DomainDeliverabilityTrackingOption[];
}
export interface PutDeliverabilityDashboardOptionResponse {}
export interface PutEmailIdentityConfigurationSetAttributesRequest {
  EmailIdentity: string | undefined;
  ConfigurationSetName?: string;
}
export interface PutEmailIdentityConfigurationSetAttributesResponse {}
export interface PutEmailIdentityDkimAttributesRequest {
  EmailIdentity: string | undefined;
  SigningEnabled?: boolean;
}
export interface PutEmailIdentityDkimAttributesResponse {}
export interface PutEmailIdentityDkimSigningAttributesRequest {
  EmailIdentity: string | undefined;
  SigningAttributesOrigin: DkimSigningAttributesOrigin | undefined;
  SigningAttributes?: DkimSigningAttributes;
}
export interface PutEmailIdentityDkimSigningAttributesResponse {
  DkimStatus?: DkimStatus;
  DkimTokens?: string[];
}
export interface PutEmailIdentityFeedbackAttributesRequest {
  EmailIdentity: string | undefined;
  EmailForwardingEnabled?: boolean;
}
export interface PutEmailIdentityFeedbackAttributesResponse {}
export declare const AccountDetailsFilterSensitiveLog: (
  obj: AccountDetails
) => any;
export declare const DkimSigningAttributesFilterSensitiveLog: (
  obj: DkimSigningAttributes
) => any;
export declare const CreateEmailIdentityRequestFilterSensitiveLog: (
  obj: CreateEmailIdentityRequest
) => any;
export declare const MessageInsightsFiltersFilterSensitiveLog: (
  obj: MessageInsightsFilters
) => any;
export declare const MessageInsightsDataSourceFilterSensitiveLog: (
  obj: MessageInsightsDataSource
) => any;
export declare const ExportDataSourceFilterSensitiveLog: (
  obj: ExportDataSource
) => any;
export declare const CreateExportJobRequestFilterSensitiveLog: (
  obj: CreateExportJobRequest
) => any;
export declare const EmailInsightsFilterSensitiveLog: (
  obj: EmailInsights
) => any;
export declare const GetAccountResponseFilterSensitiveLog: (
  obj: GetAccountResponse
) => any;
export declare const GetExportJobResponseFilterSensitiveLog: (
  obj: GetExportJobResponse
) => any;
export declare const GetMessageInsightsResponseFilterSensitiveLog: (
  obj: GetMessageInsightsResponse
) => any;
export declare const PutAccountDetailsRequestFilterSensitiveLog: (
  obj: PutAccountDetailsRequest
) => any;
export declare const PutEmailIdentityDkimSigningAttributesRequestFilterSensitiveLog: (
  obj: PutEmailIdentityDkimSigningAttributesRequest
) => any;
